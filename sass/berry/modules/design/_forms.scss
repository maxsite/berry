// (c) Berry CSS, https://maxsite.org/berry

// forms

@forward '../../config/forms';
@use 'default-forms' as *;
@use "sass:map";

@if map.get($modules, 'forms') {

    // fix normalize
    button,
    input,
    optgroup,
    select,
    textarea {
        line-height: 1;
    }
    
    // fix FireFox
    select {
        background: white;
    }

    // placeholder
    input,
    textarea {
        &:-moz-placeholder {
            color: var(--placeholder-color, $placeholder-color);
        }

        &::-moz-placeholder {
            color: var(--placeholder-color, $placeholder-color);
        }

        &:-ms-input-placeholder {
            color: var(--placeholder-color, $placeholder-color);
        }

        &::-webkit-input-placeholder {
            color: var(--placeholder-color, $placeholder-color);
        }

        font: inherit;
    }

    // design INPUT / TEXTAREA / SELECT
    .form-input {
        padding         : var(--form-input-padding, $form-input-padding);
        border          : var(--form-input-border, $form-input-border);
        border-radius   : var(--form-input-border-radius, $form-input-border-radius);
        transition      : border-color ease .2s;
        background-color: $form-input-background;
        color           : $form-input-color;

        &:disabled {
            color           : var(--form-input-disabled-color, $form-input-disabled-color);
            background-color: var(--form-input-disabled-background, $form-input-disabled-background);
            border-color    : var(--form-input-disabled-border-color, $form-input-disabled-border-color);
        }

        &:valid {
            box-shadow: none;
            border    : var(--form-input-border, $form-input-border);
        }

        &:focus,
        &:valid:focus {
            color           : var(--form-input-focus-color, $form-input-focus-color);
            background-color: var(--form-input-focus-background, $form-input-focus-background);
            border-color    : var(--form-input-focus-border-color, $form-input-focus-border-color);
            box-shadow      : var(--form-input-focus-shadow, $form-input-focus-shadow);
            outline         : 0;
        }

        .form-check-invalid &:invalid {
            box-shadow: var(--form-invalid-shadow, $form-invalid-shadow);
            border    : var(--form-invalid-border, $form-invalid-border);

            &:focus {
                box-shadow: var(--form-invalid-shadow, $form-invalid-shadow);
                border    : var(--form-invalid-border, $form-invalid-border);
            }
        }

    }

    // for invalid input
    // <script>
    // if(document.addEventListener){
    //     document.addEventListener('invalid', function(e){
    //         e.target.classList.add("js-form-invalid");
    //     }, true);    
    // }
    // </script>
    .js-form-invalid {
        box-shadow: var(--form-invalid-shadow, $form-invalid-shadow);
        border    : var(--form-invalid-border, $form-invalid-border);

        &:focus {
            box-shadow: var(--form-invalid-shadow, $form-invalid-shadow);
            border    : var(--form-invalid-border, $form-invalid-border);
        }
    }

    input[type="checkbox"],
    input[type="radio"],
    input[type="range"],
    progress,
    meter {
        accent-color: currentColor;
    }
    
    
    //     // new for testing — не использовать!
    //     .form-checkbox {
    //       --checkbox-size: 1em;           // размер квадратика
    //       --checkbox-border-width: 0.1em; // толщина рамки
    //       --checkbox-radius: 0.2em;       // скругление углов
    //       --checkbox-tick-color: white;   // цвет галочки
    //       --checkbox-bg-color: var(--primary500);  
    //     
    //       input[type="checkbox"] {
    //         appearance: none;
    //         -webkit-appearance: none;
    //         // делаем относительное позиционирование для ::after
    //         position: relative;
    //         display: inline-block;
    //         vertical-align: middle;
    //         // размер и рамка в em, чтобы следовать font-size элемента
    //         width: var(--checkbox-size);
    //         height: var(--checkbox-size);
    //         border: var(--checkbox-border-width) solid currentColor;
    //         border-radius: var(--checkbox-radius);
    //         cursor: pointer;
    //         transition: background-color 0.15s, border-color 0.15s;
    //         background-color: var(--checkbox-bg-color);
    //         
    //         // центрируем галочку через ::after
    //         &::after {
    //           content: "";
    //           position: absolute;
    //           // чтобы галочка была точно по центру, задаём top/left в процентах
    //           // и корректируем с учётом толщины рамки
    //           top: 50%;
    //           left: 50%;
    //           // размеры «линий» галочки в em
    //           width: 0.2em;
    //           height: 0.45em;
    //           border: solid var(--checkbox-tick-color);
    //           border-width: 0 0.1em 0.1em 0;
    //           transform: translate(-50%, -60%) rotate(45deg) scale(0);
    //           transform-origin: center center;
    //           transition: transform 0.15s ease-in-out;
    //         }
    //     
    //         // состояние «включено»
    //         &:checked {
    //           background-color: currentColor;
    //           border-color: currentColor;
    //     
    //           &::after {
    //             // разворачиваем галочку
    //             transform: translate(-50%, -60%) rotate(45deg) scale(1);
    //           }
    //         }
    //       }
    //     
    //       // подпись рядом с чекбоксом (текст) выравниваем по середине
    //       & > span {
    //         vertical-align: middle;
    //         margin-left: 0.2em;
    //       }
    //     }
    


    .form-checkbox {
        input[type="checkbox"] {
            display: none;

            &+.form-checkbox-icon {
                display       : inline-block;
                vertical-align: middle;
                transition    : all .2s;
                width         : 16px;
                height        : 16px;
                margin-top    : -3px; // fix align
                border-radius: 3px; // fix for darks background
                color: red;
                
                background-image: url("data:image/svg+xml;utf8,<svg width='1em' height='1em' viewBox='0 0 16 16' fill='currentColor' xmlns='http://www.w3.org/2000/svg'><path fill-rule='evenodd' d='M14 1H2a1 1 0 0 0-1 1v12a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1zM2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2H2z'/></svg>");
            }

            &:checked+.form-checkbox-icon {
                background-image: url("data:image/svg+xml;utf8,<svg width='1em' height='1em' viewBox='0 0 16 16'  fill='currentColor' xmlns='http://www.w3.org/2000/svg'><path fill-rule='evenodd' d='M14 1H2a1 1 0 0 0-1 1v12a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1zM2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2H2z'/><path fill-rule='evenodd' d='M10.97 4.97a.75.75 0 0 1 1.071 1.05l-3.992 4.99a.75.75 0 0 1-1.08.02L4.324 8.384a.75.75 0 1 1 1.06-1.06l2.094 2.093 3.473-4.425a.236.236 0 0 1 .02-.022z'/></svg>");
            }

            // ???
            // &:invalid + .form-checkbox-icon {
            //     box-shadow   : $form-invalid-shadow;
            //     border-radius: 3px;
            // }
        }
    }

    .form-radio {
        input[type="radio"] {
            display: none;

            &+.form-radio-icon {
                display       : inline-block;
                vertical-align: middle;
                transition    : all .2s;
                width         : 16px;
                height        : 16px;
                margin-top    : -3px; // fix align
                border-radius : 50%; // for rounded background

                background-image: url("data:image/svg+xml;utf8,<svg width='1em' height='1em' viewBox='0 0 16 16' fill='currentColor' xmlns='http://www.w3.org/2000/svg'><path fill-rule='evenodd' d='M8 15A7 7 0 1 0 8 1a7 7 0 0 0 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z'/></svg>");
            }

            &:checked+.form-radio-icon {
                background-image: url("data:image/svg+xml;utf8,<svg width='1em' height='1em' viewBox='0 0 16 16' fill='currentColor' xmlns='http://www.w3.org/2000/svg'><path fill-rule='evenodd' d='M8 15A7 7 0 1 0 8 1a7 7 0 0 0 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z M12 8a4 4 0 1 1-8 0 4 4 0 0 1 8 0z'/></svg>");
            }

            // ???
            // &:invalid + .form-radio-icon {
            //     box-shadow: $form-invalid-shadow;
            // }
        }
    }

    .form-switch {
        input[type="checkbox"] {
            display: none;

            &+.form-switch-icon {
                display   : inline-block;
                transition: all .2s;
                width     : 24px;
                height    : 24px;

                vertical-align     : bottom;
                line-height        : 1;
                background-repeat  : no-repeat;
                // background-size : 14px 14px;
                background-position: center;

                background-image: url("data:image/svg+xml;utf8,<svg viewBox='0 0 16 16' fill='currentColor' xmlns='http://www.w3.org/2000/svg'><path fill-rule='evenodd' d='M11 4a4 4 0 0 1 0 8H8a4.992 4.992 0 0 0 2-4 4.992 4.992 0 0 0-2-4h3zm-6 8a4 4 0 1 1 0-8 4 4 0 0 1 0 8zM0 8a5 5 0 0 0 5 5h6a5 5 0 0 0 0-10H5a5 5 0 0 0-5 5z'/></svg>");
            }

            &:checked+.form-switch-icon {
                background-image: url("data:image/svg+xml;utf8,<svg viewBox='0 0 16 16' fill='currentColor' xmlns='http://www.w3.org/2000/svg'><path fill-rule='evenodd' d='M5 3a5 5 0 0 0 0 10h6a5 5 0 0 0 0-10H5zm6 9a4 4 0 1 0 0-8 4 4 0 0 0 0 8z'/></svg>");
            }

            &:invalid+.form-switch-icon {
                background-color: #FFB7B2; // ???
                border-radius   : 5px;
            }
        }
    }

}